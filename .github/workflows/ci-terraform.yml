---
name: CI - Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

defaults:
  run:
    working-directory: ./infrastructure

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive -diff

      - name: Terraform Init
        id: init
        run: terraform init -upgrade

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        # TODO: Always replace auth keys since there isn't an time-based way to do so.
        # See: https://github.com/tailscale/terraform-provider-tailscale/issues/144#issuecomment-1566261050
        run: |
          terraform plan -no-color -input=false \
            -replace="module.ts_jasonriddle11_gmail_com.tailscale_tailnet_key.github_actions_ansible_role_tailscale_authkey[0]"
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        # Always replace auth keys since there isn't an time-based way to do so.
        # See: https://github.com/tailscale/terraform-provider-tailscale/issues/144#issuecomment-1566261050
        run: |
          terraform apply -auto-approve -input=false \
            -replace="module.ts_jasonriddle11_gmail_com.tailscale_tailnet_key.github_actions_ansible_role_tailscale_authkey[0]"
